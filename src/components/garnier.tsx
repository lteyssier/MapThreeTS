/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Sungur (https://sketchfab.com/Sungur)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/palais-garnier-2-ff0814358ad542e8b12f99bbc322cfea
Title: Palais Garnier 2
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Material2: THREE.Mesh;
    Material2_1: THREE.Mesh;
    Material2_2: THREE.Mesh;
    Material2_3: THREE.Mesh;
    Material2_4: THREE.Mesh;
    Material2_5: THREE.Mesh;
    Material2_6: THREE.Mesh;
    Material2_7: THREE.Mesh;
    Material2_8: THREE.Mesh;
    Material2_9: THREE.Mesh;
    Material2_10: THREE.Mesh;
    Material2_11: THREE.Mesh;
    Material2_12: THREE.Mesh;
    Material2_13: THREE.Mesh;
    Material2_14: THREE.Mesh;
    Material2_15: THREE.Mesh;
    Material2_16: THREE.Mesh;
    Material2_17: THREE.Mesh;
    Material2_18: THREE.Mesh;
    Material3: THREE.Mesh;
    Material2_19: THREE.Mesh;
    Material2_20: THREE.Mesh;
    Material2_21: THREE.Mesh;
    Material2_22: THREE.Mesh;
    Material2_23: THREE.Mesh;
    Material2_24: THREE.Mesh;
    Material3_1: THREE.Mesh;
  };
  materials: {
    material_2: THREE.MeshStandardMaterial;
    material_9: THREE.MeshStandardMaterial;
    material_12: THREE.MeshStandardMaterial;
    material_17: THREE.MeshStandardMaterial;
    material_18: THREE.MeshStandardMaterial;
    material_19: THREE.MeshStandardMaterial;
    material_8: THREE.MeshStandardMaterial;
    material_11: THREE.MeshStandardMaterial;
    material_16: THREE.MeshStandardMaterial;
    material: THREE.MeshStandardMaterial;
    material_0: THREE.MeshStandardMaterial;
    material_1: THREE.MeshStandardMaterial;
    material_3: THREE.MeshStandardMaterial;
    material_5: THREE.MeshStandardMaterial;
    material_4: THREE.MeshStandardMaterial;
    material_6: THREE.MeshStandardMaterial;
    material_7: THREE.MeshStandardMaterial;
    material_10: THREE.MeshStandardMaterial;
    material_13: THREE.MeshStandardMaterial;
    material_14: THREE.MeshStandardMaterial;
    material_15: THREE.MeshStandardMaterial;
    edge_color000255: THREE.LineBasicMaterial;
  };
};

export function Garnier(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/garnier.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}  scale={1}  position={[10000,0,10000]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2.geometry}
          material={materials.material_2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_1.geometry}
          material={materials.material_2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_2.geometry}
          material={materials.material_2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_3.geometry}
          material={materials.material_2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_4.geometry}
          material={materials.material_9}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_5.geometry}
          material={materials.material_12}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_6.geometry}
          material={materials.material_9}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_7.geometry}
          material={materials.material_17}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_8.geometry}
          material={materials.material_17}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_9.geometry}
          material={materials.material_18}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_10.geometry}
          material={materials.material_18}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_11.geometry}
          material={materials.material_19}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_12.geometry}
          material={materials.material_8}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_13.geometry}
          material={materials.material_11}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_14.geometry}
          material={materials.material_16}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_15.geometry}
          material={materials.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_16.geometry}
          material={materials.material_0}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_17.geometry}
          material={materials.material_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_18.geometry}
          material={materials.material_3}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material3.geometry}
          material={materials.material_5}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_19.geometry}
          material={materials.material_4}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_20.geometry}
          material={materials.material_6}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_21.geometry}
          material={materials.material_7}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_22.geometry}
          material={materials.material_10}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_23.geometry}
          material={materials.material_13}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material2_24.geometry}
          material={materials.material_14}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Material3_1.geometry}
          material={materials.material_15}
        />
        <lineSegments
          geometry={nodes.Material2_24.geometry}
          material={materials.edge_color000255}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/garnier.glb");
