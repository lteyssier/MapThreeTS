/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    parispolice_parispolice_0: THREE.Mesh;
  };
  materials: {
    parispolice: THREE.MeshStandardMaterial;
  };
};

export function Police(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/police.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.parispolice_parispolice_0.geometry}
        material={materials.parispolice}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.5}  
        position={[-15000,0,1000]}
      />
    </group>
  );
}

useGLTF.preload("/police.glb");
